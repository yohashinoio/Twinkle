privateなメンバ変数に(*this).xみたいな形でアクセスできないバグを修正
コンストラクタと一様初期化の説明
戻り値型がvoidの関数の戻り値を変数に代入してもエラーが出ないバグを修正する
メンバ変数のアクセス指定子の、わざと失敗するテスト
メソッドのアクセス指定子の、わざと失敗するテスト
配列定数（[4, 8, 1, 0]）
sphinxでドキュメントを書く
typedef
ポインタへのポインタ
単純なcreateXXXをboost::apply_visitor(*this, xxx)に書き換える
void型を消す
継承
仮想関数
浮動小数点数のインクリメント、デクリメント
全ての符号情報をSignKindで扱うように（boolになってるところがある）
nomangle属性の説明
わざと失敗するテストを作れるようにする
constなポインタをmutableなポインタに代入（もしくは引数として渡す）のを禁止したい
配列型の添字を省略
関数を自動的に前方宣言（Rustみたいな）
コンストラクタの引数の名前をメンバ変数を同じにしているが、そこをxxx_argみたいに変更する（xxx_でもいいが）
文字列をunicode対応に（文字列リテラルを*i8にするか*charにするか悩みどころ）
b'A'みたいなやつ（charじゃなくてi8になる）
Unicodeリテラル
クラス
boost::variantでRTTIを使ってる場所、ビジターに置き換えたい
演算子オーバーロード
名前空間
export import
-oオプション
github actions
JITコンパイルのチュートリアルを進める
optionはdriverでパースするようにする（Contextのようなクラスを作って、それをcompilerに渡せば良い）
入力ファイルのエンコードはUTF8限定
jobオプション
アンインストールする方法を追加 deleteオプション的な
